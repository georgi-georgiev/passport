// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admins": {
            "post": {
                "description": "create admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create admin",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/facebook/callback": {
            "post": {
                "description": "Facebook callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Facebook Callback",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/password-recovery/email": {
            "post": {
                "description": "email recovery code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Email recovery code",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.RecoveryEmailPayload"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/password-recovery/exchange": {
            "post": {
                "description": "exchange recovery code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Exchange recovery code",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.ExchangeCodeRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.ExchangeCodeResponse"
                        }
                    }
                }
            }
        },
        "/password-recovery/reset": {
            "post": {
                "description": "reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.PasswordResetPayload"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/rights": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "get rights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get rights",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/passport.RightResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "create right",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create right",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.CreateRightPayload"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/rights/{rightId}": {
            "put": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "update role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "1",
                        "name": "rightID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.UpdateRightPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.RightResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "get roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/passport.RoleResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.CreateRolePayload"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/roles/{roleId}": {
            "put": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "update role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "1",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.UpdateRolePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.RoleResponse"
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "get token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh_token",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.TokenResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/passport.UserResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/passport.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/blunder.HTTPErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "1",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.UserResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "1",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Application": []
                    }
                ],
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "1",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/passport.UpdateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/passport.UserResponse"
                        }
                    }
                }
            }
        },
        "/verify/{token}": {
            "post": {
                "description": "verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identity"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "1",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "blunder.HTTPError": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "Resubmit the request with a valid queue manager name or no queue manager name, to retrieve a list of queue managers."
                },
                "argument": {
                    "description": "number, string",
                    "type": "string",
                    "example": "number"
                },
                "detail": {
                    "description": "(string) A human-readable explanation specific to this occurrence of the problem.",
                    "type": "string",
                    "example": "The parameters: limit, date were not provided"
                },
                "expression": {
                    "description": "greater, not equals, equals, min, max, required, etc.",
                    "type": "string",
                    "example": "greater"
                },
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "placement": {
                    "type": "string",
                    "example": "field"
                },
                "reason": {
                    "type": "string",
                    "example": "invalidParameter"
                },
                "reason_code": {
                    "type": "integer",
                    "example": 150
                },
                "stack_trace": {
                    "type": "string",
                    "example": "asda"
                },
                "title": {
                    "description": "(strinrg) A short, human-readable summary of the problem\ntype.  It SHOULD NOT change from occurrence to occurrence of the\nproblem, except for purposes of localization (e.g., using\nproactive content negotiation; see [RFC7231], Section 3.4).",
                    "type": "string",
                    "example": "required parameters are missing"
                },
                "type": {
                    "description": "(string) A URI reference [RFC3986] that identifies the\nproblem type.  This specification encourages that, when\ndereferenced, it provide human-readable documentation for the\nproblem type (e.g., using HTML [W3C.REC-html5-20141028]).  When\nthis member is not present, its value is assumed to be\n\"about:blank\".",
                    "type": "string"
                }
            }
        },
        "blunder.HTTPErrorResponse": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string",
                    "example": "asdas"
                },
                "domain": {
                    "type": "string",
                    "example": "global"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blunder.HTTPError"
                    }
                },
                "instance": {
                    "description": "(strinrg) A URI reference that identifies the specificoccurrence of the problem.\nIt may or may not yield further information if dereferenced.",
                    "type": "string",
                    "example": "/login/log/abc123"
                },
                "language": {
                    "type": "string",
                    "example": "en"
                },
                "recoverable": {
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "description": "(number) The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
                    "type": "integer",
                    "example": 400
                },
                "timestamp": {
                    "type": "integer",
                    "example": 1692604569
                },
                "trace_id": {
                    "type": "string",
                    "example": "EJplcsCHuLu"
                }
            }
        },
        "passport.CreateRightPayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "passport.CreateRolePayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "passport.CreateUserPayload": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "rights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "passport.CreateUserResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "1"
                },
                "expiresIn": {
                    "type": "integer",
                    "example": 1687957803
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "token"
                },
                "tokenType": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "passport.ExchangeCodeRequestPayload": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "passport.ExchangeCodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "passport.PasswordResetPayload": {
            "type": "object",
            "required": [
                "code",
                "email",
                "password"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "passport.RecoveryEmailPayload": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "passport.RightResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "default"
                }
            }
        },
        "passport.RoleResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "passport.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "token"
                },
                "expiresIn": {
                    "type": "integer",
                    "example": 1687957803
                },
                "refreshToken": {
                    "type": "string",
                    "example": "token"
                },
                "tokenType": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "passport.UpdateRightPayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "passport.UpdateRolePayload": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "passport.UpdateUserPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "shoudlChangePassword": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "passport.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "rights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string",
                    "example": "basic"
                },
                "username": {
                    "type": "string",
                    "example": "test"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "http://localhost:2525//token"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Passport",
	Description:      "Passport",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
